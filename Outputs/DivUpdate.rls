# RiverWare_Ruleset 8.3.5 Patch
# Created 07:57 September 20, 2023
# 
RULESET
NAME "RBS Ruleset (from model file) 3";
AGENDA_ORDER ASCENDING;
DESCRIPTION "";
PRECISION   8;
NOTES "";
BEGIN

  POLICY_GROUP   "Hydrologic State and Div Requests";
  DESCRIPTION    "";
  ACTIVE         TRUE;
  NOTES          "";
  BEGIN

    RULE                 "Water Supply Adjustment SNK";
    DESCRIPTION          "";
    ACTIVE               TRUE;
    RULE_EXEC_CONSTRAINT NOT "HasRuleFiredSuccessfully"( "ThisRule" );
    NOTES                "";
    BEGIN

      IF_STATEMENT (@"t" == @"March 1") THEN
            WITH_STATEMENT (LIST data = "RowLabels"( $ "AdjustmentTable_SNK.DiversionWeight" )) DO
            FOREACH (STRING reach IN data) DO
            WITH_STATEMENT (LIST AggWU = "Split"( reach, "__" )) DO
            WITH_STATEMENT (NUMERIC WaterSupply = ( $ "Jackson.Storage" [@"24:00:00 February 28, Current Year"] + $ "Palisades.Storage" [@"24:00:00 February 28, Current Year"] + "SumFlowsToVolume"( $ "Jackson.Hydrologic Inflow", @"24:00:00 March 1, Current Year", @"24:00:00 September 30, Current Year" ) + "SumFlowsToVolume"( $ "JacksonToJKSY:Local.Local Inflow", @"24:00:00 March 1, Current Year", @"24:00:00 September 30, Current Year" ) + "SumFlowsToVolume"( $ "Palisades.Hydrologic Inflow", @"24:00:00 March 1, Current Year", @"24:00:00 September 30, Current Year" ) + "SumFlowsToVolume"( $ "PalisadesToHEII:Local.Local Inflow", @"24:00:00 March 1, Current Year", @"24:00:00 September 30, Current Year" ) ) * $ "AdjustmentTable_SNK.WaterSupply" [GET @INDEX 0.00000000 FROM AggWU, "HEII"] + ( $ "GrassyLake.Storage" [@"24:00:00 February 28, Current Year"] + $ "Henrys.Storage" [@"24:00:00 February 28, Current Year"] + $ "IslandPark.Storage" [@"24:00:00 February 28, Current Year"] + "SumFlowsToVolume"( $ "Henrys.Hydrologic Inflow", @"24:00:00 March 1, Current Year", @"24:00:00 September 30, Current Year" ) + "SumFlowsToVolume"( $ "IslandPark.Hydrologic Inflow", @"24:00:00 March 1, Current Year", @"24:00:00 September 30, Current Year" ) ) * $ "AdjustmentTable_SNK.WaterSupply" [GET @INDEX 0.00000000 FROM AggWU, "HEN"] + $ "AmericanFalls.Storage" [@"24:00:00 February 28, Current Year"] * $ "AdjustmentTable_SNK.WaterSupply" [GET @INDEX 0.00000000 FROM AggWU, "AMF"] + $ "Ririe.Storage" [@"24:00:00 February 28, Current Year"] * $ "AdjustmentTable_SNK.WaterSupply" [GET @INDEX 0.00000000 FROM AggWU, "RIR"]) DO
            FOREACH (DATETIME dt IN @"24:00:00 March 1, Current Year" TO @"24:00:00 December 31, Current Year") DO
            IF_STATEMENT (WaterSupply > $ "AdjustmentTable_SNK.DiversionWeight" [reach, "Threshold"]) THEN
            "GetSlot"( ( ( GET @INDEX 0.00000000 FROM AggWU ) CONCAT ":" CONCAT GET @INDEX 1.00000000 FROM AggWU ) CONCAT ".Diversion Requested" ) [dt] := "GetSlot"( ( % "FullDiversionReach_SNK" CONCAT "." CONCAT GET @INDEX 0.00000000 FROM AggWU ) ) [dt] * $ "AdjustmentTable_SNK.DiversionWeight" [reach, "Percent"];

      ELSE
            "GetSlot"( ( ( GET @INDEX 0.00000000 FROM AggWU ) CONCAT ":" CONCAT GET @INDEX 1.00000000 FROM AggWU ) CONCAT ".Diversion Requested" ) [dt] := "Max"( ( "GetSlot"( ( % "FullDiversionReach_SNK" CONCAT "." CONCAT GET @INDEX 0.00000000 FROM AggWU ) ) [dt] - $ "AdjustmentTable_SNK.DiversionWeight" [reach, "Slope"] * ( ( $ "AdjustmentTable_SNK.DiversionWeight" [reach, "Threshold"] - WaterSupply ) / 1.00000000 "acre-ft" * 1.00000000 "cfs" ) * $ "AdjustmentTable_SNK.DiversionShortageSpread" [dt, ( GET @INDEX 0.00000000 FROM AggWU )] ) * $ "AdjustmentTable_SNK.DiversionWeight" [reach, "Percent"], 0.00000000 "cfs" );

      END_IF_STATEMENT;

      ENDFOREACH;

      END_WITH_STATEMENT;

      END_WITH_STATEMENT;

      ENDFOREACH;

      END_WITH_STATEMENT;

      END_IF_STATEMENT;

    END
    UUID "{a53386ef-0b30-41a7-bdc7-4e6d54d14732}";;

    RULE                 "Water Supply Adjustment BOI";
    DESCRIPTION          "";
    ACTIVE               TRUE;
    RULE_EXEC_CONSTRAINT NOT "HasRuleFiredSuccessfully"( "ThisRule" );
    NOTES                "";
    BEGIN

      IF_STATEMENT (@"t" == @"March 1") THEN
            WITH_STATEMENT (LIST data = "RowLabels"( $ "AdjustmentTable_BOI.DiversionWeight" )) DO
            FOREACH (STRING reach IN data) DO
            WITH_STATEMENT (LIST AggWU = "Split"( reach, "__" )) DO
            WITH_STATEMENT (NUMERIC WaterSupply = $ "Arrowrock.Storage" [@"24:00:00 February 28, Current Year"] + $ "AndersonRanch.Storage" [@"24:00:00 February 28, Current Year"] + $ "LuckyPeak.Storage" [@"24:00:00 February 28, Current Year"] + "SumFlowsToVolume"( $ "AndersonRanchInflows.Inflow", @"24:00:00 March 1, Current Year", @"24:00:00 September 30, Current Year" ) + "SumFlowsToVolume"( $ "ANDItoARKI:Local.Local Inflow", @"24:00:00 March 1, Current Year", @"24:00:00 September 30, Current Year" ) + "SumFlowsToVolume"( $ "ARKItoLUCI:Local.Local Inflow", @"24:00:00 March 1, Current Year", @"24:00:00 September 30, Current Year" ) + "SumFlowsToVolume"( $ "ANDItoARKI:TwinSprings.Local Inflow", @"24:00:00 March 1, Current Year", @"24:00:00 September 30, Current Year" )) DO
            FOREACH (DATETIME dt IN @"24:00:00 March 1, Current Year" TO @"24:00:00 December 31, Current Year") DO
            IF_STATEMENT (WaterSupply > $ "AdjustmentTable_BOI.DiversionWeight" [reach, "Threshold"]) THEN
            "GetSlot"( ( ( GET @INDEX 0.00000000 FROM AggWU ) CONCAT ":" CONCAT GET @INDEX 1.00000000 FROM AggWU ) CONCAT ".Diversion Requested" ) [dt] := "GetSlot"( ( % "FullDiversionReach_BOI" CONCAT "." CONCAT GET @INDEX 0.00000000 FROM AggWU ) ) [dt] * $ "AdjustmentTable_BOI.DiversionWeight" [reach, "Percent"];

      ELSE
            "GetSlot"( ( ( GET @INDEX 0.00000000 FROM AggWU ) CONCAT ":" CONCAT GET @INDEX 1.00000000 FROM AggWU ) CONCAT ".Diversion Requested" ) [dt] := "Max"( ( "GetSlot"( ( % "FullDiversionReach_BOI" CONCAT "." CONCAT GET @INDEX 0.00000000 FROM AggWU ) ) [dt] - $ "AdjustmentTable_BOI.DiversionWeight" [reach, "Slope"] * ( ( $ "AdjustmentTable_BOI.DiversionWeight" [reach, "Threshold"] - WaterSupply ) / 1.00000000 "acre-ft" * 1.00000000 "cfs" ) * $ "AdjustmentTable_BOI.DiversionShortageSpread" [dt, ( GET @INDEX 0.00000000 FROM AggWU )] ) * $ "AdjustmentTable_BOI.DiversionWeight" [reach, "Percent"], 0.00000000 "cfs" );

      END_IF_STATEMENT;

      ENDFOREACH;

      END_WITH_STATEMENT;

      END_WITH_STATEMENT;

      ENDFOREACH;

      END_WITH_STATEMENT;

      END_IF_STATEMENT;

    END
    UUID "{ab0efa0c-db4e-4bcf-b6fd-c5671b003a78}";;

    RULE                 "Water Supply Adjustment PAY";
    DESCRIPTION          "";
    ACTIVE               TRUE;
    RULE_EXEC_CONSTRAINT NOT "HasRuleFiredSuccessfully"( "ThisRule" );
    NOTES                "";
    BEGIN

      IF_STATEMENT (@"t" == @"March 1") THEN
            WITH_STATEMENT (LIST data = "RowLabels"( $ "AdjustmentTable_PAY.DiversionWeight" )) DO
            FOREACH (STRING reach IN data) DO
            WITH_STATEMENT (LIST AggWU = "Split"( reach, "__" )) DO
            WITH_STATEMENT (NUMERIC WaterSupply = $ "Deadwood.Storage" [@"24:00:00 February 28, Current Year"] + $ "Cascade.Storage" [@"24:00:00 February 28, Current Year"] + "SumFlowsToVolume"( $ "Deadwood.Hydrologic Inflow", @"24:00:00 March 1, Current Year", @"24:00:00 September 30, Current Year" ) + "SumFlowsToVolume"( $ "McCallToCascade:Reach4Local.Local Inflow", @"24:00:00 March 1, Current Year", @"24:00:00 September 30, Current Year" ) + "SumFlowsToVolume"( $ "CascadeToHSBend:Reach6Local.Local Inflow", @"24:00:00 March 1, Current Year", @"24:00:00 September 30, Current Year" ) + "SumFlowsToVolume"( $ "SouthForkPayette:Reach1Local.Local Inflow", @"24:00:00 March 1, Current Year", @"24:00:00 September 30, Current Year" ) + "SumFlowsToVolume"( $ "CascadeToHSBend:Reach7Local.Local Inflow", @"24:00:00 March 1, Current Year", @"24:00:00 September 30, Current Year" )) DO
            FOREACH (DATETIME dt IN @"24:00:00 March 1, Current Year" TO @"24:00:00 December 31, Current Year") DO
            IF_STATEMENT (WaterSupply > $ "AdjustmentTable_PAY.DiversionWeight" [reach, "Threshold"]) THEN
            "GetSlot"( ( ( GET @INDEX 0.00000000 FROM AggWU ) CONCAT ":" CONCAT GET @INDEX 1.00000000 FROM AggWU ) CONCAT ".Diversion Requested" ) [dt] := "GetSlot"( ( % "FullDiversionReach_PAY" CONCAT "." CONCAT GET @INDEX 0.00000000 FROM AggWU ) ) [dt] * $ "AdjustmentTable_PAY.DiversionWeight" [reach, "Percent"];

      ELSE
            "GetSlot"( ( ( GET @INDEX 0.00000000 FROM AggWU ) CONCAT ":" CONCAT GET @INDEX 1.00000000 FROM AggWU ) CONCAT ".Diversion Requested" ) [dt] := "Max"( ( "GetSlot"( ( % "FullDiversionReach_PAY" CONCAT "." CONCAT GET @INDEX 0.00000000 FROM AggWU ) ) [dt] - $ "AdjustmentTable_PAY.DiversionWeight" [reach, "Slope"] * ( ( $ "AdjustmentTable_PAY.DiversionWeight" [reach, "Threshold"] - WaterSupply ) / 1.00000000 "acre-ft" * 1.00000000 "cfs" ) * $ "AdjustmentTable_PAY.DiversionShortageSpread" [dt, ( GET @INDEX 0.00000000 FROM AggWU )] ) * $ "AdjustmentTable_PAY.DiversionWeight" [reach, "Percent"], 0.00000000 "cfs" );

      END_IF_STATEMENT;

      ENDFOREACH;

      END_WITH_STATEMENT;

      END_WITH_STATEMENT;

      ENDFOREACH;

      END_WITH_STATEMENT;

      END_IF_STATEMENT;

    END
    UUID "{1d3f0933-93bd-42f8-a36c-cc55c677578b}";;

  END
  UUID "{4d5c3a8a-947e-4c81-b0ed-004edde78d2c}";;

END
UUID "{97c1e596-88ad-4c21-9151-e696e626457b}";
